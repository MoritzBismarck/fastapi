"""Add new event model and enums

Revision ID: c7d91d86123f
Revises: 9e07396322d7
Create Date: 2025-07-07 14:05:14.649258

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c7d91d86123f'
down_revision: Union[str, None] = '9e07396322d7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    bind = op.get_bind()
    ev = sa.Enum('PUBLIC', 'PRIVATE', 'FRIENDS', name='event_visibility')
    ev.create(bind, checkfirst=True)

    es = sa.Enum('ACTIVE', 'CANCELLED', 'DELETED', name='event_status')
    es.create(bind, checkfirst=True)

    rs = sa.Enum('INTERESTED', 'GOING', 'CANCELLED', name='rsvp_status')
    rs.create(bind, checkfirst=True)

    mc = sa.Enum('PUBLIC', 'PRIVATE', 'FRIENDS', name='match_context')
    mc.create(bind, checkfirst=True)

    rr = sa.Enum('SPAM', 'FAKE', 'HARASSMENT', name='report_reason')
    rr.create(bind, checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('visibility', sa.Enum('PUBLIC', 'PRIVATE', 'FRIENDS', name='event_visibility'), server_default='PUBLIC', nullable=False))
    op.add_column('events', sa.Column('status', sa.Enum('ACTIVE', 'CANCELLED', 'DELETED', name='event_status'), server_default='ACTIVE', nullable=False))
    op.add_column('events', sa.Column('rsvp_close_time', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('events', sa.Column('location', sa.JSON(), nullable=True))
    op.add_column('events', sa.Column('cover_photo_url', sa.String(), nullable=True))
    op.add_column('events', sa.Column('guest_limit', sa.Integer(), nullable=True))
    op.add_column('events', sa.Column('interested_count', sa.Integer(), server_default='0', nullable=False))
    op.add_column('events', sa.Column('going_count', sa.Integer(), server_default='0', nullable=False))
    op.add_column('events', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('events', sa.Column('last_edited_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('events', sa.Column('creator_id', sa.Integer(), nullable=False))
    op.alter_column('events', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column(
        'events',
        'start_time',
        existing_type=sa.String(),
        type_=sa.Time(), 
        postgresql_using="start_time::time"
    )
    op.alter_column(
        'events',
        'end_time',
        existing_type=sa.String(),
        type_=sa.Time(), 
        postgresql_using="end_time::time"
    )
    op.drop_constraint('events_created_by_fkey', 'events', type_='foreignkey')
    op.create_foreign_key(None, 'events', 'users', ['creator_id'], ['id'], ondelete='CASCADE')
    op.drop_column('events', 'created_by')
    op.drop_column('events', 'image_url')
    op.drop_column('events', 'place')
    # ### end Alembic commands ###


def downgrade() -> None:
    bind = op.get_bind()
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('place', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'events', type_='foreignkey')
    op.create_foreign_key('events_created_by_fkey', 'events', 'users', ['created_by'], ['id'], ondelete='CASCADE')
    op.alter_column(
        'events',
        'end_time',
        existing_type=sa.Time(),
        type_=sa.String(),
        postgresql_using="end_time::text"
    )
    op.alter_column(
        'events',
        'start_time',
        existing_type=sa.Time(),
        type_=sa.String(),
        postgresql_using="start_time::text"
    )
    op.alter_column('events', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('events', 'creator_id')
    op.drop_column('events', 'last_edited_at')
    op.drop_column('events', 'updated_at')
    op.drop_column('events', 'going_count')
    op.drop_column('events', 'interested_count')
    op.drop_column('events', 'guest_limit')
    op.drop_column('events', 'cover_photo_url')
    op.drop_column('events', 'location')
    op.drop_column('events', 'rsvp_close_time')
    op.drop_column('events', 'status')
    op.drop_column('events', 'visibility')

    rr = sa.Enum(name='report_reason')
    rr.drop(bind, checkfirst=True)

    mc = sa.Enum(name='match_context')
    mc.drop(bind, checkfirst=True)

    rs = sa.Enum(name='rsvp_status')
    rs.drop(bind, checkfirst=True)

    es = sa.Enum(name='event_status')
    es.drop(bind, checkfirst=True)

    ev = sa.Enum(name='event_visibility')
    ev.drop(bind, checkfirst=True)
    # ### end Alembic commands ###
