"""Add created_by column to events table

Revision ID: f698d3622653
Revises: 50f8f09ced8c
Create Date: 2025-05-04 14:19:07.758488

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f698d3622653'
down_revision: Union[str, None] = '50f8f09ced8c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('created_by', sa.Integer(), nullable=True))  # Add column as nullable initially

    # Set a default value for existing rows (e.g., admin user with ID 1)
    op.execute("UPDATE events SET created_by = 1")

    # Alter the column to be NOT NULL after populating it
    op.alter_column('events', 'created_by', nullable=False)

    op.alter_column('events', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('events', 'start_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.Date(),
               existing_nullable=False)
    op.alter_column('events', 'end_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('events', 'start_time',
               existing_type=sa.VARCHAR(),
               type_=sa.Time(),
               nullable=False)
    op.alter_column('events', 'end_time',
               existing_type=sa.VARCHAR(),
               type_=sa.Time(),
               existing_nullable=True)
    op.create_foreign_key(None, 'events', 'users', ['created_by'], ['id'], ondelete='CASCADE')
    op.drop_column('events', 'all_day')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('all_day', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'events', type_='foreignkey')
    op.alter_column('events', 'end_time',
               existing_type=sa.Time(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('events', 'start_time',
               existing_type=sa.Time(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.alter_column('events', 'end_date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('events', 'start_date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('events', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('events', 'created_by')
    # ### end Alembic commands ###
